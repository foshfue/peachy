


import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import PeachImage from "../assets/peach.png"
import LogoWhite from "../assets/logo-white.svg";

import PeachyHero from "../components/PeachyHero/peachyHero";
import SinglePeach from "../components/PeachyHero/singlePeach";

import { useEffect, useRef } from "react";
import { ScrollTrigger } from "gsap/dist/ScrollTrigger";
import { gsap } from "../utils/gsap";


gsap.registerPlugin(ScrollTrigger);




const Home: NextPage = () => {
  const textRef = useRef<any>(null);
  const peachRef = useRef<any>(null);
  useEffect(() => {

    if (typeof window !== "undefined") {

      gsap.fromTo(
        ".logoText",
        { opacity: 0 }, {
        opacity: 1, duration: 0.5, delay: 0.5
      }
      )


      // function intro() {
      //   const tl = gsap.timeline({
      //     delay: 0.5
      //   })
      //   // tl.fromTo(
      //   //   peachRef.current,
      //   //   { y: 300 }, { y: 0, duration: 1 }
      //   // )
      //   // .to(peachRef.current, { scale: 1.2, duration: 0.5 })
      //   return tl
      // }


      function stopTrigger() {
        const tl = gsap.timeline({
          delay: 1,
          scrollTrigger: {
            trigger: ".thisMoves",
            start: "top top",
            endTrigger: ".section2",
            end: 'bottom bottom',
            // end: "+=1000",
            pin: true,
            scrub: true,
            markers: true,
            // onEnter: self => console.log("enter", self),
          }
        })
        // tl.to(peachRef.current, { scale: 1.2 }, "+=0.2")
        return tl

      }

      const master = gsap.timeline()
      master.add(stopTrigger())
      // setTimeout(() => {

      //   master.add(stopTrigger())
      // }, 1000)


    }
  }, []);



  //   useEffect(() => {
  //     if (typeof window !== "undefined") {





  //     }
  // }, [])



  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="min-h-screen flex flex-col w-full overflow-x-hidden bg-gray-900 text-gray-200 undefined">


        <div className="flex flex-col flex-1 h-full bg-black ">
          <header className="px-6 lg:px-12 py-9 flex justify-between items-center text-white bg-black sticky h-auto top-0 z-10 opacity-100 w-full">
            <Link href="/">
              <a>

                <Image src={LogoWhite} alt="Create T3 App" width={96} height={50} layout="fixed" />

              </a></Link>
            <nav>
              <a>hello</a>
              <a>hello</a>
              <a>hello</a>
            </nav>
          </header>
          {/* <main className="container mx-auto flex flex-col items-center justify-center min-h-screen  "> */}
          <main className="flex flex-col flex-1 z-0 relative">

            <div className="h-[calc(100vh-129px)] relative ">
              <div ref={peachRef} className="thisMoves absolute   z-10 h-[calc(100vh-129px)] w-[100vw]    ">
                <SinglePeach />
              </div>

              {/* <div className="hero-fin absolute h-full w-full">
                <PeachyHero />
              </div> */}


              {/* <div className="hero-peach absolute h-full w-full -top-10 "> */}
              {/* </div> */}
              <div className="absolute  select-none   bottom-20 left-1/2 transform -translate-x-1/2 -translate-y-1/2 ">
                <h1 className="logoText text-6xl font-bold font-sans
    
                text-[#1976D2]
                ">
                  Peachy
                  <br></br>
                  <span className="font-normal  text-[#212121]">Agency</span>
                </h1>
              </div>
              {/* <div ref={textRef} className="logoTextScroll bg-green-200 absolute  select-none top-44 left-1/2 transform -translate-x-1/2 -translate-y-1/2 ">
                <h1 className="text-6xl font-bold font-sans
    
                text-[#1976D2]
                ">
                  top
                </h1>
              </div> */}
              <div className="absolute  select-none   bottom-5 left-1/2 transform -translate-x-1/2 -translate-y-1/2 ">
                <button className="w-12 h-12 bg-white rounded-full flex items-center justify-center">
                  <svg viewBox="0 0 24 24" className="w-8 h-8 fill-[#1976D2]"><path d="M0 0h24v24H0V0z" fill="none"></path><path d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"></path></svg>
                </button>
              </div>
            </div>
            <div className="px-6 sm:px-8 lg:flex lg:w-full lg:items-center lg:justify-between lg:gap-12">
              {/* <div className="flex flex-col">
                <Image src={PeachImage} width="100px" height="100px" layout="fixed"></Image>
                <Link href="/123"><a className="text-white">Peachy Agency</a></Link>
              </div> */}
              <div className="section2 lg:w-1/2 lb:mb-10  h-[100vh]">

                <div className="lg:max-w-2xl lg:mx-auto flex flex-col pt-[400px] lg:pt-16">
                  <h2 className="font-display text-[32px] leading-8 sm:text-[45px] sm:leading-[48px] text-white lg:text-[64px] lg:leading-[56px] xl:text-7xl xl:leading-[64px]">
                    We help <span className="text-blue-400">OnlyFans </span> <span className="text-green-400">content creators </span>to
                    <span className="text-green-brand"> achieve </span> and <span className="text-yellow-brand">scale </span>
                    <span>6 to 7 </span> <span>figures</span></h2>
                  <div className="h-6">

                  </div>

                  <p className="text-[18px] leading-8 xl:pr-56 lg:text-[20px] text-[#d0d0d0]">
                    Stop wasting time and money on faulty and ineffective strategies. It&apos;s time to scale your OnlyFans business to outside of the border of human capabilities (for real).
                  </p>

                </div>
              </div>

            </div>

          </main>
        </div>
      </div>
    </>
  );
};

const TechnologyCard = ({
  name,
  description,
  documentation,
}: TechnologyCardProps) => {
  return (
    <section className="flex flex-col justify-center p-6 duration-500 border-2 border-gray-500 rounded shadow-xl motion-safe:hover:scale-105">
      <h2 className="text-lg text-gray-700">{name}</h2>
      <p className="text-sm text-gray-600">{description}</p>
      <a
        className="mt-3 text-sm underline text-violet-500 decoration-dotted underline-offset-2"
        href={documentation}
        target="_blank"
        rel="noreferrer"
      >
        Documentation
      </a>
    </section>
  );
};

export default Home;
